# .github/workflows/fork-triggered-welcome.yml
name: Fork Triggered Welcome Issue

on:
  fork:

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
      - name: Welcome to the workshop, let‚Äôs get started!
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT_CROSSREPO }}
          script: |
            const FORKER    = context.actor;
            const UPSTREAM  = context.repo.owner + '/' + context.repo.repo;
            const FORK_REPO = context.payload.forkee.full_name;

            // Fetch the fork‚Äôs default-branch HEAD SHA
            const [fOwner, fRepo] = FORK_REPO.split('/');
            const forkInfo = await github.rest.repos.get({
              owner: fOwner,
              repo:  fRepo
            });
            const defaultBranch = forkInfo.data.default_branch;
            const refData = await github.rest.git.getRef({
              owner: fOwner,
              repo:  fRepo,
              ref:   `heads/${defaultBranch}`
            });
            const FORK_SHA = refData.data.object.sha;

            // 1) Build the initial issue body, embedding FORK_REPO and FORK_SHA
            const body = `
            Hi @${FORKER}!

            Fork repo: \`${FORK_REPO}\`
            Fork sha:  \`${FORK_SHA}\`

            Thank you for forking the repository and getting started with the workshop! 
            *Forking* means that you created a copy of the original workshop repository, whereas a *repository* is the central project folder in GitHub. 

            The **Cheat Sheet** in the repository gives a quick overview of the key terms on GitHub. 

            Currently, you are in an *issue*, which is a way to track tasks, ideas, or bugs within a specific repository. 
            Throughout the workshop, we use this issue to track your progress. 
            Every time you reply with \`/done NUMBER\` this list gets updated:

            - [x] 1. Created GitHub account
            - [x] 2. Fork GitHub repo
            - [ ] 3. Activate issues in your fork

            **Important**: Please complete the tasks in your forked repository, but always return to this issue in the original workshop repository to indicate that you‚Äôre done.
           
            *Why?* This is due to the technical setup of the workshop.
            You‚Äôre working in your fork, but the issue that tracks your progress is in the original repository. 
            Since you don‚Äôt have write access there, you cannot edit the issue directly (for example, by checking checkboxes).

  
            `.trim();
            
              
            // 2) Create the issue
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              title: `@${FORKER} Started participating in the workshop! üéâ`,
              body,
              labels: ['newfork']
            });

            // 3) Post the detailed "Next step" instructions as a comment
            const commentBody = `
         
            ---
            
            Let‚Äôs approach this like a true scientist: step by step, with curiosity, precision, and a healthy dose of skepticism (and maybe a coffee or two). 
            If you hit an unexpected result, remember‚Äîevery great discovery started with a question. 
            Data, documentation, and reproducibility are our friends here.
            
            **Next step:**  
            Please enable ‚ÄúIssues‚Äù in your forked repository so we can collaborate, track your progress, and (most importantly) keep a clear record of our scientific journey.
            
            To enable issues:
            
            1. Open your repository's **Settings**: https://github.com/${FORK_REPO}/settings  
            2. Scroll down to the **Features** section.  
            3. Check the box labeled **‚ÄúIssues‚Äù**.  
            4. When finished, reply here with \`/done 3\`.
            
            If something doesn‚Äôt match the documentation or you spot an anomaly, don‚Äôt hesitate to ask. 
            In science, there are no silly questions, only hypotheses waiting to be tested. 
            Let‚Äôs keep things reproducible, transparent, and maybe even a bit fun. 
            Happy experimenting!
            `.trim();

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              issue_number: issue.data.number,
              body: commentBody
            });
